{"version":3,"file":"static/js/564.689f6926.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/ChangeForm/ChangeForm.styled.js","components/ChangeForm/ChangeForm.jsx","components/DeleteForm/DeleteForm.styled.js","components/DeleteForm/DeleteForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/InputForm/InputForm.styled.js","components/InputForm/InputForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport 'index.css';\n\nexport const Wrapper = styled.li`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ItemWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  width: 100%;\n`;\n\nexport const Name = styled.p`\n  display: block;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 0.5rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: var(--bgcolor-accent);\n`;\n\nexport const Phone = styled.p`\n  display: block;\n  margin: 0;\n  padding: 0;\n  font-size: 1rem;\n  font-weight: 400;\n  color: var(--title-color);\n`;\n\nexport const ModifyBtn = styled.button`\n  display: block;\n  margin-left: 1rem;\n  font-size: 1rem;\n  font-weight: 400;\n  color: var(--title-color);\n\n  padding: 0.25rem 0.5rem;\n  width: 6.25rem;\n  border-radius: 0.25rem;\n  border: 1px solid var(--bgcolor-accent);\n  background-color: transparent;\n  transition: background-color 250ms ease;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n  }\n  & + & {\n    margin-top: 0.25rem;\n  }\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  margin: 2rem auto;\n\n  width: fit-content;\n  height: fit-content;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--bgcolor-accent);\n  border: 1px solid var(--bgcolor-accent);\n  border-radius: 1rem;\n\n  background-color: #c3c3c3;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  & + & {\n    margin-top: 0.75rem;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 20rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n\n  font-size: 1.25rem;\n  background-color: transparent;\n  border: 1px solid black;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 0.5rem 1rem;\n  margin-top: 2rem;\n\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--main-bgcolor);\n\n  border-radius: 0.25rem;\n  border: none;\n  background-color: var(--bgcolor-first);\n  transition: background-color 250ms ease, color 250ms ease;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 1rem;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n    color: var(--title-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { editContact } from 'redux/contacts/operations.js';\n\nimport { Input, Label, Button, Form } from './ChangeForm.styled.js';\nimport { selectContacts } from 'redux/contacts/selectors.js';\nimport { toastMessage } from 'components/Layout.jsx';\n\nexport const ChangeForm = ({ id, name, number, onClose }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [nameValue, setNameValue] = useState(name);\n  const [numberValue, setNumberValue] = useState(number);\n\n  const handleChange = evt => {\n    const currentInput = evt?.target;\n    if (currentInput.name === 'name') {\n      setNameValue(currentInput.value);\n    } else {\n      setNumberValue(currentInput.value);\n    }\n  };\n\n  const handleEditSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt?.target;\n    const { name: nameInput, number: numberInput } = form.elements;\n\n    const contactName = nameInput.value.trim();\n    const contactPhone = numberInput.value.trim();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase().trim() === contactName\n      ) &&\n      contactName !== name\n    ) {\n      toastMessage('Contact with such name exists yet.');\n      return;\n    }\n\n    if (contactName === name && contactPhone === number) {\n      onClose();\n      return;\n    }\n\n    dispatch(editContact({ id, name: contactName, number: contactPhone }));\n    onClose();\n  };\n\n  return (\n    <Form onSubmit={handleEditSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={nameValue}\n          required\n          autoComplete=\"off\"\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Phone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={numberValue}\n          required\n          autoComplete=\"off\"\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Edit contact</Button>\n    </Form>\n  );\n};\n\nChangeForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  width: fit-content;\n  height: fit-content;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--bgcolor-accent);\n  border: 1px solid var(--bgcolor-accent);\n  border-radius: 1rem;\n  margin: 2rem auto;\n  background-color: #c3c3c3;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  & + & {\n    margin-top: 0.75rem;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 20rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n\n  background-color: transparent;\n  border: 1px solid black;\n  border-bottom: 1px solid var(--bgcolor-accent);\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--main-bgcolor);\n  padding: 0.5rem 1rem;\n  margin-top: 2rem;\n  border-radius: 0.25rem;\n  border: none;\n  background-color: var(--bgcolor-first);\n  transition: background-color 250ms ease, color 250ms ease;\n  cursor: pointer;\n\n  & + & {\n    margin-left: 1rem;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n    color: var(--title-color);\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contacts/operations.js';\n\nimport { Input, Label, Button, Form } from './DeleteForm.styled.js';\nimport { ButtonsWrapper } from './DeleteForm.styled.js';\n\nexport const DeleteForm = ({ id, name, number, onClose }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteSubmit = evt => {\n    evt.preventDefault();\n\n    dispatch(deleteContact(id));\n\n    onClose();\n  };\n\n  return (\n    <Form onSubmit={handleDeleteSubmit}>\n      <Label>\n        Name\n        <Input type=\"text\" value={name} disabled={true} />\n      </Label>\n      <Label>\n        Phone\n        <Input type=\"tel\" name=\"number\" value={number} disabled={true} />\n      </Label>\n      <ButtonsWrapper>\n        <Button type=\"submit\">Delete</Button>\n        <Button type=\"button\" onClick={onClose}>\n          Cancel\n        </Button>\n      </ButtonsWrapper>\n    </Form>\n  );\n};\n\nDeleteForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  ItemWrapper,\n  Wrapper,\n  Name,\n  Phone,\n  ModifyBtn,\n  BtnWrapper,\n} from './ContactListItem.styled.js';\n\nimport { Modal } from 'components/Modal/Modal.jsx';\nimport { ChangeForm } from 'components/ChangeForm/ChangeForm';\nimport { DeleteForm } from 'components/DeleteForm/DeleteForm';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const [isOpenedEditModal, SetIsOpenedEditModal] = useState(false);\n  const [isOpenedDeleteModal, SetIsOpenedDeleteModal] = useState(false);\n\n  const handleEditModalToggle = () => SetIsOpenedEditModal(!isOpenedEditModal);\n  const handleDeleteModalToggle = () =>\n    SetIsOpenedDeleteModal(!isOpenedDeleteModal);\n\n  return (\n    <>\n      <Wrapper>\n        <ItemWrapper>\n          <Name>{name}</Name>\n          <Phone>{number}</Phone>\n        </ItemWrapper>\n        <BtnWrapper>\n          <ModifyBtn type=\"button\" onClick={handleEditModalToggle}>\n            Edit\n          </ModifyBtn>\n          <ModifyBtn type=\"button\" onClick={handleDeleteModalToggle}>\n            Delete\n          </ModifyBtn>\n        </BtnWrapper>\n      </Wrapper>\n      {isOpenedEditModal && (\n        <Modal onClose={handleEditModalToggle}>\n          <ChangeForm\n            id={id}\n            name={name}\n            number={number}\n            onClose={handleEditModalToggle}\n          />\n        </Modal>\n      )}\n      {isOpenedDeleteModal && (\n        <Modal onClose={handleDeleteModalToggle}>\n          <DeleteForm\n            id={id}\n            name={name}\n            number={number}\n            onClose={handleDeleteModalToggle}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 1rem;\n  height: fit-content;\n  padding: 1rem;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 1.25rem;\n  color: var(--bgcolor-accent);\n  margin-bottom: 1rem;\n`;\n\nexport const Input = styled.input`\n  width: 23rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n\n  background-color: inherit;\n  border: 1px solid black;\n\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter/slice';\n\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handlerFilterChange = evt => {\n    dispatch(setFilter(evt?.target?.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        title=\"Filter is case unsensitive.\"\n        onChange={handlerFilterChange}\n        required\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1.5rem;\n  width: fit-content;\n  height: fit-content;\n  font-size: 1.25rem;\n  font-weight: 400;\n  color: var(--bgcolor-accent);\n  border: 1px solid var(--bgcolor-accent);\n\n  margin: 2rem auto;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  & + & {\n    margin-top: 0.75rem;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 20rem;\n  font-size: 1.25rem;\n  padding: 0.5rem;\n  margin-top: 0.25rem;\n\n  background-color: inherit;\n  border: 1px solid black;\n\n  color: var(--title-color);\n  &::placeholder {\n    font-weight: 200;\n    font-style: italic;\n    color: var(--bgcolor-second);\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 1.25rem;\n  font-weight: 600;\n  color: var(--main-bgcolor);\n  padding: 0.5rem 1rem;\n  margin-top: 2rem;\n  border-radius: 0.25rem;\n  border: none;\n  background-color: var(--bgcolor-first);\n  transition: background-color 250ms ease, color 250ms ease;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: var(--bgcolor-accent);\n    color: var(--title-color);\n  }\n`;\n","import { toastMessage } from 'components/Layout.jsx';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations.js';\nimport { selectContacts } from 'redux/contacts/selectors.js';\n\nimport { Input, Label, Button, Form } from './InputForm.styled.js';\n\nexport const InputForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt?.target;\n    const { name, number } = form.elements;\n    const contactName = name.value.trim();\n    const contactPhone = number.value.trim();\n\n    if (\n      !contacts.some(\n        contact =>\n          contact.name.toLowerCase().trim() === contactName.toLowerCase()\n      )\n    ) {\n      form.reset();\n\n      dispatch(addContact({ name: contactName, number: contactPhone }));\n    } else {\n      toastMessage('Contact with such name exists yet.');\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Label>\n        Phone\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"off\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { useContacts } from 'components/hooks';\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { InputForm } from 'components/InputForm/InputForm';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { isLoading, error } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <InputForm />\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Wrapper","styled","ItemWrapper","Name","Phone","ModifyBtn","BtnWrapper","Form","Label","Input","Button","ChangeForm","id","name","number","onClose","contacts","useSelector","selectContacts","dispatch","useDispatch","useState","nameValue","setNameValue","numberValue","setNumberValue","handleChange","evt","currentInput","target","value","onSubmit","preventDefault","elements","nameInput","numberInput","contactName","trim","contactPhone","some","contact","toLowerCase","toastMessage","editContact","type","pattern","title","required","autoComplete","onChange","ButtonsWrapper","DeleteForm","deleteContact","disabled","onClick","ContactListItem","isOpenedEditModal","SetIsOpenedEditModal","isOpenedDeleteModal","SetIsOpenedDeleteModal","handleEditModalToggle","handleDeleteModalToggle","Modal","List","ContactList","visibleContacts","selectVisibleContacts","map","Filter","setFilter","InputForm","form","reset","addContact","useContacts","isLoading","error","useEffect","fetchContacts","Loader"],"sourceRoot":""}